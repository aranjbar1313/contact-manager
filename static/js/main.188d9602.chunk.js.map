{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","t0","_this2","_this$props$contact","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","deleteClickHandler","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0SAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,CACR,CACEG,GAAI,EACJqB,KAAM,WACNC,MAAO,iBACPC,MAAO,gBAET,CACEvB,GAAI,EACJqB,KAAM,cACNC,MAAO,kBACPC,MAAO,gBAET,CACEvB,GAAI,EACJqB,KAAM,gBACNC,MAAO,kBACPC,MAAO,iBAGXC,SAAU,SAAA/B,GACRe,EAAKiB,SAAS,SAAAjC,GAAK,OAAID,EAAQC,EAAOC,OAvB5Ce,EAAA,OAAAb,OAAA+B,EAAA,EAAA/B,CAAAU,EAAAC,GAAAX,OAAAgC,EAAA,EAAAhC,CAAAU,EAAA,EAAAuB,IAAA,oBAAAC,MAAA,eAAAC,EAAAnC,OAAAoC,EAAA,EAAApC,CAAAqC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EA4BsBC,IAAMC,IAAI,8CA5BhC,OA4BUN,EA5BVE,EAAAK,KA6BIjC,KAAKe,SAAS,CAAE5B,SAAUuC,EAAIQ,OA7BlC,wBAAAN,EAAAO,SAAAV,EAAAzB,SAAA,yBAAAoB,EAAAV,MAAAV,KAAAE,YAAA,KAAAgB,IAAA,SAAAC,MAAA,WAiCI,OACEiB,EAAAb,EAAAc,cAAC3D,EAAQiB,SAAT,CAAkBwB,MAAOnB,KAAKlB,OAC3BkB,KAAKsC,MAAMC,cAnCpB5C,EAAA,CAA8B6C,aAyCjBC,EAAW/D,EAAQ+D,SCIjBC,6MAvEb5D,MAAQ,CACN6D,iBAAiB,KAGnBC,YAAc,SAAAC,GACZ/C,EAAKiB,SAAS,CAAE4B,iBAAkB7C,EAAKhB,MAAM6D,qBAG/CG,oDAAgB,SAAArB,EAAOnC,EAAIwB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,IAAMgB,OAAN,8CAAAvD,OAC8BF,IAHpC,OAAAsC,EAAAK,KAKZnB,EAAS,CAAE9B,KAAM,iBAAkBO,QAASD,IALhCsC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoB,GAAApB,EAAA,SAOZd,EAAS,CAAE9B,KAAM,iBAAkBO,QAASD,IAPhC,yBAAAsC,EAAAO,SAAAV,EAAA,iJAWP,IAAAwB,EAAAjD,KAAAkD,EAC4BlD,KAAKsC,MAAMjD,QAAtCC,EADD4D,EACC5D,GAAIqB,EADLuC,EACKvC,KAAMC,EADXsC,EACWtC,MAAOC,EADlBqC,EACkBrC,MACjB8B,EAAoB3C,KAAKlB,MAAzB6D,gBAER,OACEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,uBACbf,EAAAb,EAAAc,cAAA,UACG1B,EAAM,IACPyB,EAAAb,EAAAc,cAAA,KACEe,QAASH,EAAKL,YACdO,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnBlB,EAAAb,EAAAc,cAAA,KACEe,QAASH,EAAKH,cAAcS,KAAKN,EAAM3D,EAAIwB,GAC3CqC,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWE,MAAO,QAASC,MAAO,SAErDrB,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAE,gBAAAnE,OAAkBF,IACxB8C,EAAAb,EAAAc,cAAA,KACEc,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRE,MAAO,QACPC,MAAO,QACPG,YAAa,YAKpBjB,EACCP,EAAAb,EAAAc,cAAA,MAAIc,UAAU,cACZf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCvC,GACxCwB,EAAAb,EAAAc,cAAA,MAAIc,UAAU,mBAAd,UAAwCtC,IAExC,eA3DI2B,aCgCPqB,6MAjCbC,cAAgB,SAAAxE,GAAM,IAEdyE,EADejE,EAAKhB,MAAlBK,SACqBC,OAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOA,IAC9DQ,EAAKiB,SAAS,CACZ5B,SAAU4E,6EAIL,IAAAd,EAAAjD,KACP,OACEoC,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAhC,EAAagC,EAAbhC,SACR,OACEiD,EAAAb,EAAAc,cAACD,EAAAb,EAAMyC,SAAP,KACE5B,EAAAb,EAAAc,cAAA,MAAIc,UAAU,kBACZf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,WADF,SAGChE,EAASO,IAAI,SAAAL,GAAO,OACnB+C,EAAAb,EAAAc,cAAC4B,EAAD,CACE/C,IAAK7B,EAAQC,GACbD,QAASA,EACT6E,mBAAoBjB,EAAKa,cAAcP,KAAKN,EAAM5D,EAAQC,kBAvBrDkD,sCCAjB2B,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACA1D,EAMIyD,EANJzD,KACAQ,EAKIiD,EALJjD,MACAmD,EAIIF,EAJJE,YACAtF,EAGIoF,EAHJpF,KACAuF,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEpC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,cACbf,EAAAb,EAAAc,cAAA,SAAOoC,QAAS9D,GAAO0D,GACvBjC,EAAAb,EAAAc,cAAA,SACErD,KAAMA,EACN2B,KAAMA,EACNwC,UAAWuB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbnD,MAAOA,EACPoD,SAAUA,IAEXC,GAASpC,EAAAb,EAAAc,cAAA,OAAKc,UAAU,oBAAoBqB,KAenDL,EAAeS,aAAe,CAC5B5F,KAAM,QAGOmF,QC+DAU,6MAtGb/F,MAAQ,CACN6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiE,OAAQ,MAGVC,+CAAW,SAAAtD,EAAOX,EAAU+B,GAAjB,IAAAmC,EAAArE,EAAAC,EAAAC,EAAAoE,EAAAvD,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTe,EAAEqC,iBADOF,EAEsBlF,EAAKhB,MAA5B6B,EAFCqE,EAEDrE,KAAMC,EAFLoE,EAEKpE,MAAOC,EAFZmE,EAEYnE,MAGR,KAATF,EALK,CAAAiB,EAAAE,KAAA,eAMPhC,EAAKiB,SAAS,CAAE+D,OAAQ,CAAEnE,KAAM,sBANzBiB,EAAAuD,OAAA,oBASK,KAAVvE,EATK,CAAAgB,EAAAE,KAAA,eAUPhC,EAAKiB,SAAS,CAAE+D,OAAQ,CAAElE,MAAO,uBAV1BgB,EAAAuD,OAAA,oBAaK,KAAVtE,EAbK,CAAAe,EAAAE,KAAA,gBAcPhC,EAAKiB,SAAS,CAAE+D,OAAQ,CAAEjE,MAAO,uBAd1Be,EAAAuD,OAAA,yBAkBHF,EAAa,CACjBtE,OACAC,QACAC,SArBOe,EAAAE,KAAA,GAwBSC,IAAMqD,KACtB,6CACAH,GA1BO,QAwBHvD,EAxBGE,EAAAK,KA4BTnB,EAAS,CAAE9B,KAAM,cAAeO,QAASmC,EAAIQ,OAG7CpC,EAAKiB,SAAS,CACZJ,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiE,OAAQ,KAGVhF,EAAKwC,MAAM+C,QAAQC,KAAK,KAtCf,yBAAA1D,EAAAO,SAAAV,gEAyCX8C,SAAW,SAAA1B,GAAC,OAAI/C,EAAKiB,SAAL9B,OAAAsG,EAAA,EAAAtG,CAAA,GAAiB4D,EAAE2C,OAAO7E,KAAOkC,EAAE2C,OAAOrE,iFAEjD,IAAA8B,EAAAjD,KAAAyF,EACgCzF,KAAKlB,MAApC6B,EADD8E,EACC9E,KAAMC,EADP6E,EACO7E,MAAOC,EADd4E,EACc5E,MAAOiE,EADrBW,EACqBX,OAE5B,OACE1C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,eACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,QAAM0C,SAAU9B,EAAK8B,SAASxB,KAAKN,EAAMnC,IACvCsB,EAAAb,EAAAc,cAACqD,EAAD,CACErB,MAAM,OACN1D,KAAK,OACL2D,YAAY,gBACZnD,MAAOR,EACP4D,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOnE,OAEhByB,EAAAb,EAAAc,cAACqD,EAAD,CACErB,MAAM,QACN1D,KAAK,QACL3B,KAAK,QACLsF,YAAY,iBACZnD,MAAOP,EACP2D,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOlE,QAEhBwB,EAAAb,EAAAc,cAACqD,EAAD,CACErB,MAAM,QACN1D,KAAK,QACL2D,YAAY,iBACZnD,MAAON,EACP0D,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOjE,QAEhBuB,EAAAb,EAAAc,cAAA,SACErD,KAAK,SACLmC,MAAM,cACNgC,UAAU,wCA3FLX,aCmHVmD,6MAlHb7G,MAAQ,CACN6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiE,OAAQ,MAiBVC,+CAAW,SAAAtD,EAAOX,EAAU+B,GAAjB,IAAAmC,EAAArE,EAAAC,EAAAC,EAAA+E,EAAAtG,EAAAoC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTe,EAAEqC,iBADOF,EAEsBlF,EAAKhB,MAA5B6B,EAFCqE,EAEDrE,KAAMC,EAFLoE,EAEKpE,MAAOC,EAFZmE,EAEYnE,MAGR,KAATF,EALK,CAAAiB,EAAAE,KAAA,eAMPhC,EAAKiB,SAAS,CAAE+D,OAAQ,CAAEnE,KAAM,sBANzBiB,EAAAuD,OAAA,oBASK,KAAVvE,EATK,CAAAgB,EAAAE,KAAA,eAUPhC,EAAKiB,SAAS,CAAE+D,OAAQ,CAAElE,MAAO,uBAV1BgB,EAAAuD,OAAA,oBAaK,KAAVtE,EAbK,CAAAe,EAAAE,KAAA,gBAcPhC,EAAKiB,SAAS,CAAE+D,OAAQ,CAAEjE,MAAO,uBAd1Be,EAAAuD,OAAA,yBAkBHS,EAAa,CAAEjF,OAAMC,QAAOC,SAE1BvB,EAAOQ,EAAKwC,MAAMuD,MAAMC,OAAxBxG,GApBCsC,EAAAE,KAAA,GAqBSC,IAAMgE,IAAN,8CAAAvG,OAC8BF,GAC9CsG,GAvBO,QAqBHlE,EArBGE,EAAAK,KA0BTnB,EAAS,CAAE9B,KAAM,iBAAkBO,QAASmC,EAAIQ,OAGhDpC,EAAKiB,SAAS,CACZJ,KAAM,GACNC,MAAO,GACPC,MAAO,GACPiE,OAAQ,KAGVhF,EAAKwC,MAAM+C,QAAQC,KAAK,KApCf,yBAAA1D,EAAAO,SAAAV,gEAuCX8C,SAAW,SAAA1B,GAAC,OAAI/C,EAAKiB,SAAL9B,OAAAsG,EAAA,EAAAtG,CAAA,GAAiB4D,EAAE2C,OAAO7E,KAAOkC,EAAE2C,OAAOrE,qNApDhD7B,EAAOU,KAAKsC,MAAMuD,MAAMC,OAAxBxG,YACUyC,IAAMC,IAAN,8CAAAxC,OAC8BF,WAD1CoC,SAIArC,EAAUqC,EAAIQ,KACpBlC,KAAKe,SAAS,CACZJ,KAAMtB,EAAQsB,KACdC,MAAOvB,EAAQuB,MACfC,MAAOxB,EAAQwB,2IA6CV,IAAAoC,EAAAjD,KAAAyF,EACgCzF,KAAKlB,MAApC6B,EADD8E,EACC9E,KAAMC,EADP6E,EACO7E,MAAOC,EADd4E,EACc5E,MAAOiE,EADrBW,EACqBX,OAE5B,OACE1C,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,eAAf,gBACAf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAAA,QAAM0C,SAAU9B,EAAK8B,SAASxB,KAAKN,EAAMnC,IACvCsB,EAAAb,EAAAc,cAACqD,EAAD,CACErB,MAAM,OACN1D,KAAK,OACL2D,YAAY,gBACZnD,MAAOR,EACP4D,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOnE,OAEhByB,EAAAb,EAAAc,cAACqD,EAAD,CACErB,MAAM,QACN1D,KAAK,QACL3B,KAAK,QACLsF,YAAY,iBACZnD,MAAOP,EACP2D,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOlE,QAEhBwB,EAAAb,EAAAc,cAACqD,EAAD,CACErB,MAAM,QACN1D,KAAK,QACL2D,YAAY,iBACZnD,MAAON,EACP0D,SAAUtB,EAAKsB,SACfC,MAAOM,EAAOjE,QAEhBuB,EAAAb,EAAAc,cAAA,SACErD,KAAK,SACLmC,MAAM,iBACNgC,UAAU,wCAvGJX,aCDpBwD,EAAS,SAAA1D,GAAS,IACd2D,EAAa3D,EAAb2D,SACR,OACE7D,EAAAb,EAAAc,cAAA,OAAKc,UAAU,2DACbf,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,gBACpB8C,GAEH7D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,sBACZf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBADf,SAKFf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChCf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,gBADf,QAKFf,EAAAb,EAAAc,cAAA,MAAIc,UAAU,YACZf,EAAAb,EAAAc,cAACqB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1Bf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,oBADf,eAYd6C,EAAOpB,aAAe,CACpBqB,SAAU,UAOGD,QC7CAE,EAAA,WACb,OACE9D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aAAd,yBACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,iCACAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,kBAAb,mBCLSgD,EAAA,WACb,OACE/D,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIc,UAAU,aACZf,EAAAb,EAAAc,cAAA,QAAMc,UAAU,eAAhB,OADF,mBAGAf,EAAAb,EAAAc,cAAA,KAAGc,UAAU,QAAb,qCCeSiD,6MApBbtH,MAAQ,CACNuH,MAAO,GACPC,KAAM,uFAEY,IAAArD,EAAAjD,KAClBuG,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIzD,EAAKlC,SAAS,CAAEsF,MAAOK,EAAKL,MAAOC,KAAMI,EAAKJ,0CAEvD,IAAAtB,EACiBhF,KAAKlB,MAArBuH,EADDrB,EACCqB,MAAOC,EADRtB,EACQsB,KACf,OACElE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAKgE,GACLjE,EAAAb,EAAAc,cAAA,SAAIiE,WAfO9D,aCsCJmE,gMAtBX,OACEvE,EAAAb,EAAAc,cAACuE,EAAD,KACExE,EAAAb,EAAAc,cAACqB,EAAA,EAAD,KACEtB,EAAAb,EAAAc,cAAA,OAAKc,UAAU,OACbf,EAAAb,EAAAc,cAACwE,EAAD,CAAQZ,SAAS,oBACjB7D,EAAAb,EAAAc,cAAA,OAAKc,UAAU,aACbf,EAAAb,EAAAc,cAACyE,EAAA,EAAD,KACE1E,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,IACjCzB,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWpC,IAC5CzC,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWtB,IACjDvD,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWf,IACtC9D,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWb,IACrChE,EAAAb,EAAAc,cAACyE,EAAA,EAAD,CAAOG,UAAWd,gBAdhB3D,cCJE0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCbNyB,IAASC,OAAOnF,EAAAb,EAAAc,cAACmF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC","file":"static/js/main.188d9602.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [\n      {\n        id: 1,\n        name: 'John Doe',\n        email: 'jdoe@gmail.com',\n        phone: '555-555-5555'\n      },\n      {\n        id: 2,\n        name: 'Karen Smith',\n        email: 'karen@gmail.com',\n        phone: '222-222-2222'\n      },\n      {\n        id: 3,\n        name: 'Henry Johnson',\n        email: 'henry@gmail.com',\n        phone: '111-111-1111'\n      }\n    ],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onShowClick = e => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      const res = await axios.delete(\n        `https://jsonplaceholder.typicode.com/users/${id}`\n      );\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (e) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: 'pointer' }}\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  deleteContact = id => {\n    const { contacts } = this.state;\n    const newContacts = contacts.filter(contact => contact.id !== id);\n    this.setState({\n      contacts: newContacts\n    });\n  };\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                  deleteClickHandler={this.deleteContact.bind(this, contact.id)}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      'https://jsonplaceholder.typicode.com/users',\n      newContact\n    );\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const updContact = { name, email, phone };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/2')\n      .then(response => response.json())\n      .then(json => this.setState({ title: json.title, body: json.body }));\n  }\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n// import Contact from './components/contacts/Contact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}